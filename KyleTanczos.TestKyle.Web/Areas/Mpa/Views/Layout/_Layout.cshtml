@using System.Threading
@using System.Web.Optimization
@using Abp.Extensions
@using Abp.Timing
@using Abp.Web.Mvc.Extensions
@using KyleTanczos.TestKyle.Localization
@using KyleTanczos.TestKyle.Web.Bundling
<!DOCTYPE html>
<!--[if IE 8]> <html lang="en" class="ie8 no-js" data-ng-app="app"> <![endif]-->
<!--[if IE 9]> <html lang="en" class="ie9 no-js" data-ng-app="app"> <![endif]-->
<!--[if !IE]><!-->

@*manifest="/libs/aaaCustom/manifest.appcache"*@
<html  lang="en" @(CultureHelper.IsRtl ? "dir=\"rtl\"" : "")>
<!--<![endif]-->
<head>
    <title>TestKyle</title>
    <meta charset="utf-8" />
   
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <meta content="" name="description" />
    <meta content="" name="author" />

    <link rel="shortcut icon" href="~/favicon.ico" />

    <link href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700&subset=all" rel="stylesheet" type="text/css" />

    @Styles.Render("~/Bundles/Mpa/libs/css" + (CultureHelper.IsRtl ? "RTL" : ""))
    @Styles.Render("~/Bundles/Mpa/metronic/css" + (CultureHelper.IsRtl ? "RTL" : ""))
    @Styles.Render("~/Bundles/Common/css")

    @Html.IncludeStyle("~/Areas/Mpa/Views/Layout/_Layout.min.css")

    @RenderSection("Styles", false)
    <link href="~/libs/select2-master/dist/css/select2.css" rel="stylesheet" />

    @*<link href="~/libs/select2/css/select2.css" rel="stylesheet" />
    <link href="~/libs/select2/css/select2-bootstrap.min.css" rel="stylesheet" />*@

    <script type="text/javascript">
        @* This is used to get the application's root path from javascript.
        It's useful if you're running application in a virtual directory under IIS. *@
        var abp = abp || {}; abp.appPath = '@ApplicationPath';
    </script>



</head>
<!-- END HEAD -->
<!-- BEGIN BODY -->
<!-- DOC: Apply "page-header-fixed-mobile" and "page-footer-fixed-mobile" class to body element to force fixed header or footer in mobile devices -->
<!-- DOC: Apply "page-sidebar-closed" class to the body and "page-sidebar-menu-closed" class to the sidebar menu element to hide the sidebar by default -->
<!-- DOC: Apply "page-sidebar-hide" class to the body to make the sidebar completely hidden on toggle -->
<!-- DOC: Apply "page-sidebar-closed-hide-logo" class to the body element to make the logo hidden on sidebar toggle -->
<!-- DOC: Apply "page-sidebar-hide" class to body element to completely hide the sidebar on sidebar toggle -->
<!-- DOC: Apply "page-sidebar-fixed" class to have fixed sidebar -->
<!-- DOC: Apply "page-footer-fixed" class to the body element to have fixed footer -->
<!-- DOC: Apply "page-sidebar-reversed" class to put the sidebar on the right side -->
<!-- DOC: Apply "page-full-width" class to the body element to have full width page without the sidebar menu -->
<body class="page-md page-header-fixed page-sidebar-closed-hide-logo">

    <div class="page-header navbar navbar-fixed-top md-shadow-zero-light">
        @Html.Action("Header", "Layout")
    </div>

    <div class="clearfix">
    </div>

    <div class="page-container">
        <div class="page-sidebar-wrapper">
            @Html.Action("Sidebar", "Layout", new { currentPageName = ViewBag.CurrentPageName })
        </div>
        <div class="page-content-wrapper">
            <div class="page-content">
                @RenderBody()
            </div>
        </div>
    </div>

    <div class="page-footer">
        @Html.Action("Footer", "Layout")
    </div>

    <!--[if lt IE 9]>
        <script src="~/libs/respond/respond.min.js"></script>
        <script src="~/libs/html5shiv/html5shiv.js"></script>
        <script src="~/libs/excanvas/excanvas.min.js"></script>
    <![endif]-->
    @Scripts.Render("~/Bundles/Mpa/libs/js")


    @*<script src="~/libs/select2/js/select2.min.js"></script>*@
    <script src="~/libs/select2-master/dist/js/select2.full.min.js"></script>

    <script src="~/libs/bootbox/bootbox.min.js"></script>
    @Html.IncludeScript(ScriptPaths.JQuery_Validation_Localization)
    @Html.IncludeScript(ScriptPaths.JQuery_JTable_Localization)
    @Html.IncludeScript(ScriptPaths.Bootstrap_Select_Localization)

    <script>
        abp.localization.defaultSourceName = '@LocalizationSourceName';
        moment.locale('@Thread.CurrentThread.CurrentUICulture.Name.Left(2)'); //Localizing moment.js
    </script>

    <!-- Dynamic scripts of ABP system (They are created on runtime and can not be bundled) -->
    <script src="~/api/AbpServiceProxies/GetAll"></script>
    <script src="~/AbpScripts/GetScripts?v=@(Clock.Now.Ticks)" type="text/javascript"></script>

    @Scripts.Render("~/Bundles/Mpa/metronic/js")
    <script type="text/javascript">
        App.setAssetsPath(abp.appPath + 'metronic/assets/');
    </script>

    @Scripts.Render("~/Bundles/Common/js")
    @Scripts.Render("~/Bundles/Mpa/Common/js")

    @Html.IncludeScript("~/Areas/Mpa/Views/Layout/_Header.js")

    @RenderSection("Scripts", false)


    @*<script src="~/libs/jquery-inputmask-Metronic/jquery.inputmask.bundle.min.js"></script>*@

    @*<script src="~/libs/jquery-maskedinput/src/jquery.maskedinput.js"></script>*@

    <link href="~/libs/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
    <link href="~/libs/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet" type="text/css" />
    

    @*<script src="//cdn.datatables.net/1.10.11/js/jquery.dataTables.min.js"></script>
    <script src="//cdn.datatables.net/responsive/2.0.2/js/dataTables.responsive.min.js"></script>*@
    @*<script src="~/libs/datatables/datatables.all.min.js"></script>
    <script src="../assets/global/scripts/datatable.js" type="text/javascript"></script>*@
    <script src="~/libs/datatables/datatables.min.js" type="text/javascript"></script>
    <script src="~/libs/datatables/plugins/bootstrap/datatables.bootstrap.js" type="text/javascript"></script>

    <link href="~/libs/bootstrap-touchspin/bootstrap.touchspin.css" rel="stylesheet" />
    <script src="~/libs/bootstrap-touchspin/bootstrap.touchspin.js"></script>

    <script type="text/javascript">

        var data = [{ id: 0, text: '' }, { id: 1, text: 'bug' }, { id: 2, text: 'duplicate' }, { id: 3, text: 'invalid' }, { id: 4, text: 'wontfix' }];

        //$(".select2Data").select2({
        //    data: data
        //});







        function InstantiateSelect2Modal(thisDialog) {

            $(thisDialog).find(".select2modal").each(function (i, obj) {

                if (!$(obj).hasClass('select2-hidden-accessible')) { // check to see if the select2 has been init
                    $(obj).select2({
                        width: 'element',
                        theme: "bootstrap"
                    });
                }
            });

            $(thisDialog).find(".select2modalOffline").each(function (i, obj) {

                if (!$(obj).hasClass('select2-hidden-accessible')) { // check to see if the select2 has been init
                    $(obj).select2({
                        width: 'element',
                        theme: "bootstrap"
                    });
                }
            });

        }


        function InstantiateSelect2s(jqueryTargetDiv) {


            $(jqueryTargetDiv).find(".select2Default").each(function (i, obj) {


                if (!$(obj).hasClass('select2-hidden-accessible')) { // check to see if the select2 has been init
                    $(obj).select2({
                        width: 'element',
                        theme: "bootstrap"
                    });
                }
            });


            $(jqueryTargetDiv).find("[offlineSelect2listName]").each(function (i, obj) {

                if (!$(obj).hasClass('select2-hidden-accessible')) { // check to see if the select2 has been init

                    var offlineListName = $(obj).attr('offlineSelect2listName');

                    $(obj).select2({
                        theme: "bootstrap",
                        width: '100%',
                        data: JSON.parse(localStorage.getItem(offlineListName)),//"PatientMedicationList"
                        placeholder: "Start typing medication (Quick Add)",
                        //allowClear: true,
                        tags: true,
                        minimumInputLength: 3
                    });
                }
            });

            //$(jqueryTargetDiv + " .select2Medications").each(function (i, obj) {
            //    if (!$(obj).hasClass('select2-hidden-accessible')) { // check to see if the select2 has been init
            //        $(obj).select2({
            //            theme: "bootstrap",
            //            width: '100%',
            //            data: JSON.parse(localStorage.getItem("PatientMedicationList")),
            //            placeholder: "Start typing medication (Quick Add)",
            //            //allowClear: true,
            //            tags: true,
            //            minimumInputLength: 3

            //        });
            //    }
            //});
        }

        function SideNav() {
            //var $sideNav = $('.page-sidebar').clone();

            //alert("" +  $sideNav);

            //$('.custom-menu-nav').html($sideNav);

            $(".page-sidebar-menu").find('a').each(function (index) {

                var href = $(this).attr('href');
                var titleText = $(this).find('span').html();

                if (href.indexOf("#") > -1) {

                    tabTarget = href.substring(2);

                    $(this).attr('tabTargetId', tabTarget);

                    $(this).attr('href', "#");

                    $(this).click(function () {
                        ShowPcrTabByControl(this);
                    });

                    $('.custom-menu-nav').append(
                        "<li role='presentation' class='divider'> </li>" +
                        "<li role='presentation'><a role='menuitem' tabTargetId='" + tabTarget
                        + "' onclick='ShowPcrTabByControl(this)' tabindex='-1' href='#'>" + titleText + "</a></li>"
                        );
                }
                else // no #
                {
                    $('.custom-menu-nav').append(
                        "<li role='presentation' class='divider'> </li>" +
                        "<li role='presentation'><a role='menuitem' tabindex='-1' href='" + href + "'>" + titleText + "</a></li>"
                        );
                }

            });
        };

       // SideNav();

        // tabTargetId of the calling element must be filled with div id to be shown
        function ShowPcrTabByControl(thisControl) {
            var tabTargetQuery = "#" + $(thisControl).attr('tabTargetId');

            ShowPcrTab(tabTargetQuery);
        }

        function ShowPcrTab(tabTargetQuery) {
            $(".custom-tabs").hide();

            $(tabTargetQuery).show();

            InstantiateSelect2s(tabTargetQuery);
        }


        $(document).ready(function () {

            // On modal becomes shown
            $('.modal').on('shown.bs.modal', function (e) {

                InstantiateSelect2Modal(this);
            });

             
            $(".input-spinner").TouchSpin();


            ShowPcrTab("#MedicationsTab");
        });

        // this will be the first tab shown
    </script>


</body>



</html>